using carnival.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using web;
using carnival.classes;
using logconfiguration;
using System.IO;
using System.Text;
using System.Configuration;
using System.Globalization;

namespace carnival.Controllers
{
    public class ReportController : Controller
    {
        //
        // GET: /SMSData/

        public ActionResult Index()
        {
            return View();
        }

        public ActionResult Carnival()
        {
            try
            {
                if (Session["username"] != null)
                {
                    ____logconfig.Log_Write(____logconfig.LogLevel.INFO, 63, "Carnival:bind_reseller()::Function starts here.");
                    string query1 = "SELECT * FROM customer WHERE parentresellername=?global.username; ";
                    ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query1, "getreseller");
                    string[] param = new string[] { Session["username"].ToString() };
                    DataSet ds1 = DL.DL_ExecuteQuery(query1, param);
                    List<usercarnival> lstcarrnival1 = utility.BindDataList<usercarnival>(ds1.Tables[0]);
                    List<SelectListItem> items = new List<SelectListItem>();
                   
                  
                    foreach (var t in lstcarrnival1)
                    {
                        SelectListItem s = new SelectListItem();

                        s.Text = t.UserName;
                        s.Value = t.UserName;
                        items.Add(s);
                    }
                    ViewBag.username = items;
                }
                else
                {
                    TempData["error"] = "session expired! please login again";
                    return RedirectToAction("logincarnival", "Account");
                }
                
            }
            catch (Exception exc)
            {
                ____logconfig.Error_Write(____logconfig.LogLevel.EXC, 868, exc.Message.ToString(), "CarnivalReports");
            }
           


           return View();
        }

        [HttpPost]
        public ActionResult Carnival(FormCollection formalue)
        {
            string query = "", fromdatefinal = "", todatefinal=""; string[] paramdata = { "" };
             List<carrnival> lstcarrnival =new List<carrnival>();
            DataSet ds =new DataSet();

             try
             {
                 if (Session["username"] != null)
                 {
                     ____logconfig.Log_Write(____logconfig.LogLevel.INFO, 63, "Carnival:getcarnivaldata()::Function starts here.");
                     string fromdate = formalue["Search-form-Fromdate"];
                     string todate = formalue["Search-form-Todate"];

                     if ((fromdate != "Select Date" && fromdate != "") && (todate != "Select Date" && todate != ""))
                     {
                         fromdatefinal = fromdate + " 00:00:00";
                         todatefinal = todate + " 23:59:59";
                     }
                     else
                     {
                         fromdatefinal = "";
                         todatefinal = "";
                     }


                     string username = formalue["username"];
                     string mobileno = formalue["Search-form-mobile"];





                     
                     //if (username != "")
                     //{
                         #region binddropdown
                         string query1 = "SELECT * FROM customer WHERE parentresellername=?global.username; ";
                         string[] param = new string[] { Session["username"].ToString() };
                         DataSet ds1 = DL.DL_ExecuteQuery(query1, param);

                         List<usercarnival> lstcarrnival1 = utility.BindDataList<usercarnival>(ds1.Tables[0]);
                         List<SelectListItem> items = new List<SelectListItem>();
                         foreach (var t in lstcarrnival1)
                         {
                             SelectListItem s = new SelectListItem();
                             s.Text = t.UserName;
                             s.Value = t.UserName;
                             //if (username == t.UserName)
                             //{
                             //    //s.Selected = true;
                             //    ViewData["username"] = username;
                             //}
                             items.Add(s);
                         }
                         ViewBag.SelectedOption = username;
                         ViewBag.username = items;
                         
                         #endregion


                         if (fromdatefinal == "" && todatefinal == "" && mobileno != "" &&username!="")
                         {
                             query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE  cr.`username`=?global.username and cr.`mobileno`=?global.destination;";
                             ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                             paramdata = new string[] { username, mobileno };
                             ds = DL.DL_ExecuteQuery(query, paramdata);
                             Session["exportmobile"] = ds;
                         }
                         else if (fromdatefinal != "" && todatefinal != "" && mobileno == ""&&username!="")
                         {

                             query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`username`=?global.username AND cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "' LIMIT 0,1000;";
                             ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                             paramdata = new string[] { username };
                             ds = DL.DL_ExecuteQuery(query, paramdata);


                             if (ds != null)
                             {
                                 if (ds.Tables[0].Rows.Count > 0)
                                 {
                                     if (ds.Tables[0].Rows.Count < 1)
                                     {

                                         Session["exportdata"] = ds;
                                     }
                                 }
                             }
                             Session["exportmobile"] = null;
                         }
                         else if (fromdatefinal != "" && todatefinal != "" && mobileno != "" && username!="")
                         {
                             query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`username`=?global.username AND cr.`mobileno`=?global.destination and  cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "';";
                             ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                             paramdata = new string[] { username, mobileno };
                             ds = DL.DL_ExecuteQuery(query, paramdata);
                             Session["exportmobile"] = ds;
                         }
                         else if(fromdate!="" && todatefinal!="" && mobileno=="" && username=="")
                         {
                             query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "' LIMIT 0,1000;";
                             ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                             ds = DL.DL_ExecuteSimpleQuery(query);
                             if (ds != null)
                             {
                                 if (ds.Tables[0].Rows.Count > 0)
                                 {
                                     if (ds.Tables[0].Rows.Count < 1)
                                     {
                                         Session["exportdata"] = ds;
                                     }
                                 }
                             }
                             Session["exportmobile"] = null;
                         }
                         else if (fromdate == "" && todatefinal == "" && mobileno != "" && username == "")
                         {
                             query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`mobileno`=?global.destination and cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "';";
                             ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                             paramdata = new string[] { mobileno };
                             ds = DL.DL_ExecuteQuery(query, paramdata);
                             Session["exportmobile"] = ds;
                         }
                         else if (fromdate != "" && todatefinal != "" && mobileno != "" && username == "")
                         {
                             query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`mobileno`=?global.destination and cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "';";
                             ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                             paramdata = new string[] { mobileno };
                             ds = DL.DL_ExecuteQuery(query, paramdata);
                             Session["exportmobile"] = ds;
                         }

                         if (ds != null)
                         {
                             lstcarrnival = utility.BindDataList<carrnival>(ds.Tables[0]);
                             if (ds.Tables[0].Rows.Count > 0)
                             {
                                 if (fromdatefinal != "" && todatefinal != "")
                                 {
                                     TempData["fromdate"] = fromdate;
                                     TempData["todate"] = todate;
                                     TempData["mobileno"] = mobileno;
                                     if (ds.Tables[0].Rows.Count < 1000)
                                     {
                                         TempData["success"] = "Data Display count::" + ds.Tables[0].Rows.Count;
                                     }
                                     else
                                     {
                                         TempData["success"] = "Data is very large for selected date range so we are only displaying some rows. To check complete data, Please download report.";
                                     }
                                     
                                     
                                 }
                                 else if (fromdatefinal == "" && todatefinal == "" && mobileno != "")
                                 {
                                     TempData["fromdate"] = fromdate;
                                     TempData["todate"] = todate;
                                     TempData["mobileno"] = mobileno;
                                     TempData["success"] = "";
                                 }
                             }
                             else
                             {
                                 TempData["success"] = "No Data To Display!!";
                             }
                         }
                         else
                         {
                             TempData["error"] = "Problem while Loading Data!!";
                         }
                         return View(lstcarrnival);
                     //}
                     //else
                     //{
                     //    return RedirectToAction("Carnival", "Report");
                     //}
                    
                 }
                 else
                 {
                     TempData["error"] = "No Data to Display!!";
                     return RedirectToAction("logincarnival", "Account");
                 }
             }
             catch (Exception exc)
             {
                 ____logconfig.Error_Write(____logconfig.LogLevel.EXC, 868, exc.Message.ToString(), "CarnivalReports");
                 TempData["error"] = "Problem while Loading Data!!";
                 return View(lstcarrnival);
             }
        }



        public ActionResult CarnivalSummary()
        {


            try
            {
                if (Session["username"] != null)
                {
                    ____logconfig.Log_Write(____logconfig.LogLevel.INFO, 63, "Carnival:bind_reseller()::Function starts here.");
                    string query1 = "SELECT * FROM customer WHERE parentresellername=?global.username; ";
                    ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query1, "getreseller");
                    string[] param = new string[] { Session["username"].ToString() };
                    DataSet ds1 = DL.DL_ExecuteQuery(query1, param);
                    List<usercarnival> lstcarrnival1 = utility.BindDataList<usercarnival>(ds1.Tables[0]);
                    List<SelectListItem> items = new List<SelectListItem>();


                    foreach (var t in lstcarrnival1)
                    {
                        SelectListItem s = new SelectListItem();

                        s.Text = t.UserName;
                        s.Value = t.UserName;
                        items.Add(s);
                    }
                    ViewBag.username = items;
                }
                else
                {
                    TempData["error"] = "session expired! please login again";
                    return RedirectToAction("logincarnival", "Account");
                }

            }
            catch (Exception exc)
            {
                ____logconfig.Error_Write(____logconfig.LogLevel.EXC, 868, exc.Message.ToString(), "CarnivalReports");
            }
            return View();
        }

        [HttpPost]
        public ActionResult CarnivalSummary(FormCollection formalue)
        {
            string query = "", fromdatefinal = "", todatefinal = ""; string[] paramdata = { "" };
            try
            {
                if (Session["username"] != null)
                {
                    ____logconfig.Log_Write(____logconfig.LogLevel.INFO, 63, "Carnival:getcarnivaldata()::Function starts here.");
                    string fromdate = formalue["SearchSummary-form-Fromdate"];
                    string todate = formalue["SearchSummary-form-Todate"];

                    //if ((fromdate != "Select Date" && fromdate != "") && (todate != "Select Date" && todate != ""))
                    //{
                    //    fromdatefinal = fromdate ;
                    //    todatefinal = todate ;
                    //}
                    //else
                    //{
                    //    fromdatefinal = DateTime.Now.ToString("yyyyMMdd");
                    //    todatefinal = DateTime.Now.ToString("yyyyMMdd");
                    //}

                    string username = formalue["username"];
                    //string mobileno = formalue["Search-form-mobile"];


                    #region binddropdown
                    string query1 = "SELECT * FROM customer WHERE parentresellername=?global.username; ";
                    string[] param = new string[] { Session["username"].ToString() };
                    DataSet ds1 = DL.DL_ExecuteQuery(query1, param);

                    List<usercarnival> lstcarrnival1 = utility.BindDataList<usercarnival>(ds1.Tables[0]);
                    List<SelectListItem> items = new List<SelectListItem>();
                    foreach (var t in lstcarrnival1)
                    {
                        SelectListItem s = new SelectListItem();
                        s.Text = t.UserName;
                        s.Value = t.UserName;
                        //if (username == t.UserName)
                        //{
                        //    //s.Selected = true;
                        //    ViewData["username"] = username;
                        //}
                        items.Add(s);
                    }
                    ViewBag.SelectedOption = username;
                    ViewBag.username = items;

                    #endregion



                   // string fromdate = from_date.Value;
                   // string todate = to_date.Value;
                    if (fromdate == "--Select Date--" || fromdate == "")
                    {
                        fromdate = DateTime.Now.ToString("yyyyMMdd");
                    }
                    if (todate == "--Select Date--" || todate == "")
                    {
                        todate = DateTime.Now.ToString("yyyyMMdd");
                    }

                    if (int.Parse(fromdate) > int.Parse(todate))
                    {
                        //lblError.Text = "From date can not be greater than to date";
                        //lblError.Visible = true;
                        //lblSuccess.Text = "";
                        //lblSuccess.Visible = false;
                    }
                    else
                    {
                        //dict_userdata.Add("TotalSent", sent_count);
                        //dict_userdata.Add("DELIVRD", delivrdcount);
                        //dict_userdata.Add("UNDELIVRD", undelivrdcount);
                        //dict_userdata.Add("DNC", dnccount);
                        //dict_userdata.Add("EXPIRD", expirdcount);
                        //dict_userdata.Add("Other", othercount);
                        //dict_userdata.Add("SMSC", long.Parse(smsccount.ToString()));
                        //dict_userdata.Add("Invoicecount", invoicecount);
                        DataTable dt = new DataTable();
                        dt.Columns.Add("User_Name");
                        dt.Columns.Add("Date");
                        dt.Columns.Add("Total_Sent");
                        dt.Columns.Add("Delivered");
                        dt.Columns.Add("Undelivered");
                        dt.Columns.Add("Dnc_Reject");
                        dt.Columns.Add("Other");
                        dt.Columns.Add("SMSC");


                        List<int> all_dates = utility.GetALLDate(fromdate, todate);

                        int total = 0;
                        int delivrd = 0;
                        int undelivrd = 0;
                        int dnc_reject = 0;
                        int other = 0;
                        int smsc = 0;
                        foreach (int daywisedate in all_dates)
                        {
                            Dictionary<string, long> dict_get_summery = Summary.getsmscount(daywisedate.ToString(), daywisedate.ToString(), username, ConfigurationManager.AppSettings["MysqlConnectionString"].ToString(), 1);
                            if (dict_get_summery != null)
                            {
                                if (dict_get_summery.ContainsKey("TotalSent") && dict_get_summery["TotalSent"] > 0)
                                {


                                    DataRow dr = dt.NewRow();
                                    dr["User_Name"] = Session["username"].ToString();
                                    string dd = daywisedate.ToString() + "000000";
                                    CultureInfo provider = CultureInfo.InvariantCulture;
                                    string dateString = daywisedate.ToString();
                                    string format = "yyyyMMdd";
                                    DateTime result = DateTime.ParseExact(dateString, format, provider);

                                    dr["Date"] = result.ToString("yyyy-MM-dd");
                                    dr["Total_Sent"] = dict_get_summery["TotalSent"];
                                    dr["Delivered"] = dict_get_summery["DELIVRD"];
                                    dr["Undelivered"] = dict_get_summery["UNDELIVRD"];
                                    dr["Dnc_Reject"] = dict_get_summery["DNC"];
                                    dr["Other"] = dict_get_summery["Other"] + dict_get_summery["EXPIRD"];
                                    if (dict_get_summery["SMSC"] >= 0)
                                    {
                                        dr["SMSC"] = dict_get_summery["SMSC"];
                                    }
                                    else
                                    {
                                        dr["SMSC"] = 0;
                                    }


                                    dt.Rows.Add(dr);

                                    total += int.Parse(dict_get_summery["TotalSent"].ToString());
                                    delivrd += int.Parse(dict_get_summery["DELIVRD"].ToString());
                                    undelivrd += int.Parse(dict_get_summery["UNDELIVRD"].ToString());
                                    dnc_reject += int.Parse(dict_get_summery["DNC"].ToString());
                                    other += int.Parse(dict_get_summery["Other"].ToString()) + int.Parse(dict_get_summery["EXPIRD"].ToString());
                                    smsc += int.Parse(dict_get_summery["SMSC"].ToString());

                                }
                                else
                                {

                                    //lblError.Text = "SMS not sent";
                                    //lblError.Visible = true;
                                    //lblSuccess.Text = "";
                                    //lblSuccess.Visible = false;
                                }

                            }
                            else
                            {
                                //lblError.Text = "Data Not found";
                                //lblError.Visible = true;
                                //lblSuccess.Text = "";
                                //lblSuccess.Visible = false;

                            }
                        }

                        if (dt != null)
                        {
                            if (dt.Rows.Count > 0)
                            {
                                //DataGrid1.Visible = false;
                               // DataGrid1.DataSource = null;
                               // DataGrid1.Visible = true;
                                DataView dv = dt.DefaultView;
                                dv.Sort = "Date DESC";
                                dt = dv.ToTable();



                                DataRow dr = dt.NewRow();
                                DataRow dr1 = dt.NewRow();
                                dr1["User_Name"] = "";

                                dr1["Date"] = "<b>Total<b>";
                                dr1["Total_Sent"] = "<b>" + total.ToString() + "<b>";
                                dr1["Delivered"] = "<b>" + delivrd.ToString() + "<b>";
                                dr1["Undelivered"] = "<b>" + undelivrd.ToString() + "<b>";
                                dr1["Dnc_Reject"] = "<b>" + dnc_reject.ToString() + "<b>";
                                dr1["Other"] = "<b>" + other.ToString() + "<b>";
                                dr1["SMSC"] = "<b>" + smsc.ToString() + "<b>";

                                dt.Rows.Add(dr);
                                dt.Rows.Add(dr1);

                               // DataGrid1.DataSource = dt;

                                Session["summery_data"] = dt;
                                //DataGrid1.CurrentPageIndex = 0;
                                //DataGrid1.DataBind();

                                //Panel1.Visible = true;

                               // lblError.Visible = false;
                               // lblSuccess.Visible = false;
                                //changePageIndex("first");
                            }
                            else
                            {

                                //Panel1.Visible = false;
                                //lblError.Text = "SMS not sent";
                                //DataGrid1.Visible = false;
                                //lblError.Visible = true;
                                //lblSuccess.Text = "";
                                //lblSuccess.Visible = false;
                            }
                        }
                        else
                        {
                            //Panel1.Visible = false;
                            //lblError.Text = "Data Not found";
                            //DataGrid1.Visible = false;
                            //lblError.Visible = true;
                            //lblSuccess.Text = "";
                            //lblSuccess.Visible = false;
                        }
                    }
                }
            }
            catch (Exception exc)
            {
                ____logconfig.Error_Write(____logconfig.LogLevel.EXC, 868, exc.Message.ToString(), "CarnivalReports");
            }
            return View();
        }



        public string CreateFastCSVFile(DataTable table, string strFilePath,string downloadurl,string filename)
        {
            const int capacity =5000000;
            const int maxCapacity = 20000000;
           
            List<string> lst = new List<string>();
            string finalfilepath = strFilePath + filename;
           // ConvertToCSV conv = new ConvertToCSV(downloadpath, Session["username"].ToString(), downloadurl);
            //First we will write the headers.
            StringBuilder csvBuilder = new StringBuilder(capacity);

            csvBuilder.AppendLine(string.Join(",", table.Columns.Cast<DataColumn>().Select(c => c.ColumnName)));

            // Create the CSV file and write all from StringBuilder
            using (var sw = new StreamWriter(finalfilepath, false))
            {
                foreach (DataRow dr in table.Rows)
                {
                    if (csvBuilder.Capacity >= maxCapacity)
                    {
                        sw.Write(csvBuilder.ToString());
                        csvBuilder = new StringBuilder(capacity);
                    }

                    
                    csvBuilder.Append(String.Join(",", dr.ItemArray));
                    csvBuilder.Append("\n");
                    
                }

                sw.Write(csvBuilder.ToString());
            }

            //conv.ZipFileDLR();
            string[] filepath = utility.ZipFileDLR(strFilePath, downloadurl, "rsv_carnival");
           
            return filepath[1];
        }


        public string export_to_csv(searchresult obj)
        {
            string query = "", fromdatefinal = "", todatefinal = "", downloadpath = "",downloadurl, filename=""; string[] paramdata = { "" };
            string ratval = "" ;
          //  string filePath = @"e:\temp\test.csv";
            downloadpath = ConfigurationManager.AppSettings["downloadpath"].ToString();
            downloadurl = ConfigurationManager.AppSettings["downloadurl"].ToString();
//@"E:\downloadcarnival\";
            
            if (!Directory.Exists(downloadpath))
            {
                Directory.CreateDirectory(downloadpath);
            }
            try
            {
                if (Session["username"] != null)
                {
                    filename = Session["username"].ToString() + "_" + DateTime.Now.ToString("yyyyMMddHHmmss") + ".csv";
                    if (Session["exportmobile"] != null)
                    {
                        
                        DataSet ds = (DataSet)Session["exportmobile"];
                         ratval = CreateFastCSVFile(ds.Tables[0], downloadpath, downloadurl,filename);
                         Session["exportmobile"] = null;
                       // ratval = "";
                    }
                    else
                    {
                        ____logconfig.Log_Write(____logconfig.LogLevel.INFO, 63, "Carnival:getcarnivaldata()::Function starts here.");
                        string fromdate = obj.fromdate;//formalue["Search-form-Fromdate"];
                        string todate = obj.todate;
                        string mobileno = obj.mobileno;
                        string username = obj.username;//formalue["Search-form-Todate"];
                        if (( fromdate!=null&&fromdate != "") && (todate!=null&&todate != ""))
                        {
                            fromdatefinal = fromdate + " 00:00:00";
                            todatefinal = todate + " 23:59:59";
                            if (obj.mobileno.ToString() != "black")
                            {
                                if (obj.username == null)
                                {
                                    //query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE  cr.`username`=?global.username and cr.`mobileno`=?global.destination;";
                                    query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`mobileno`=?global.destination and  cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "';";
                                    ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                                    paramdata = new string[] { obj.mobileno.ToString() };
                                    DataSet ds = DL.DL_ExecuteQuery(query, paramdata);
                                    if (ds.Tables[0].Rows.Count > 0)
                                    {
                                        ratval = CreateFastCSVFile(ds.Tables[0], downloadpath, downloadurl, filename);
                                    }
                                    else
                                    {
                                        ratval = "";
                                    }
                                }
                                else
                                {
                                    query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`username`=?global.username AND cr.`mobileno`=?global.destination and cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "';";
                                    ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                                    paramdata = new string[] { obj.username, obj.mobileno.ToString() };
                                    DataSet ds = DL.DL_ExecuteQuery(query, paramdata);
                                    if (ds.Tables[0].Rows.Count > 0)
                                    {
                                        ratval = CreateFastCSVFile(ds.Tables[0], downloadpath, downloadurl, filename);
                                    }
                                    else
                                    {
                                        ratval = "";
                                    }
                                }
                                //query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE  cr.`username`=?global.username and cr.`mobileno`=?global.destination;";
                            }
                            else
                            {
                                if (Session["exportdata"] != null)
                                {
                                    DataSet ds = (DataSet)Session["exportdata"];
                                    //  CreateFastCSVFile(ds.Tables[0], @"E:\test.csv");
                                    ratval = CreateFastCSVFile(ds.Tables[0], downloadpath, downloadurl, filename);
                                }
                                else
                                {
                                    DataSet ds =new DataSet();
                                    if (obj.username == null)
                                    {
                                        query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE  cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "';";
                                        ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                                        ds = DL.DL_ExecuteSimpleQuery(query);
                                        if (ds.Tables[0].Rows.Count > 0)
                                        {
                                            ratval = CreateFastCSVFile(ds.Tables[0], downloadpath, downloadurl, filename);
                                        }
                                        else
                                        {
                                            ratval = "";
                                        }
                                    }
                                    else
                                    {
                                        query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`username`=?global.username AND cr.`senddate`>='" + fromdatefinal + "' AND cr.`senddate`<='" + todatefinal + "';";
                                        ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                                        paramdata = new string[] { obj.username.ToString() };
                                        ds = DL.DL_ExecuteQuery(query, paramdata);
                                    }
                                    if (ds.Tables[0].Rows.Count > 0)
                                    {
                                        ratval = CreateFastCSVFile(ds.Tables[0], downloadpath, downloadurl, filename);

                                    }
                                    else
                                    {
                                        ratval = "";
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (mobileno != "black")
                            {
                                if (username == null)
                                {
                                    query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`mobileno`=?global.destination ;";
                                    ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                                    paramdata = new string[] { obj.mobileno.ToString() };
                                    
                                }
                                else
                                {
                                    query = "SELECT cr.`username`,cr.`messageid`,cr.`mobileno`,cr.`message`,cr.`dlrstatus`,cr.`messagecount`,cr.`senddate`,cr.`dlrdate`,cr.`senderid` FROM client_delivery_reports  AS cr WHERE cr.`username`=?global.username and cr.`mobileno`=?global.destination;";
                                    ____logconfig.Log_Write(____logconfig.LogLevel.DB, 0, "Query :: " + query, "getresellerdata");
                                    paramdata = new string[] { obj.username, obj.mobileno.ToString() };
                                    
                                }
                                DataSet ds = DL.DL_ExecuteQuery(query, paramdata);
                                if (ds.Tables[0].Rows.Count > 0)
                                {
                                    ratval = CreateFastCSVFile(ds.Tables[0], downloadpath, downloadurl, filename);
                                }else
                                {
                                    ratval = "";
                                }
                            }
                        }
                    }
                }
                else
                {
                    ratval = "timeout";
                }
            }
            catch (Exception exc)
            {
                ____logconfig.Error_Write(____logconfig.LogLevel.EXC, 868, exc.Message.ToString(), "CarnivalReports");
                ratval = "";
            }
            Session["exportmobile"] = null;
            Session["exportdata"] = null;
            return ratval;
        }
    }
}
